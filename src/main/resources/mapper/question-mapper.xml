<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.jnh.dao.QuestionMapper">

    <resultMap id="questionResultMap" type="question">
        <result property="qno" column="qno"/>
        <result property="ano" column="ano"/>
        <result property="user_id" column="user_id"/>
        <result property="product_id" column="product_id"/>
        <result property="contents" column="contents"/>
        <result property="reg_date" column="reg_date"/>

        <association property="product" javaType="Product">
            <result property="product_name" column="product_name"/>
            <result property="image" column="image"/>
        </association>
    </resultMap>

<!--  총게시물 갯수  -->
<!--  아이디 or 상품번호에 맞춰 정보불러오기   -->
    <select id="count" resultType="int" parameterType="Map">
        SELECT count(*) FROM question
        where true
        <if test="user_id != null">
            AND user_id = #{user_id}
        </if>
        <if test="product_id != null">
            AND product_id = #{product_id} AND ano = 1
        </if>
        order by qno desc
    </select>

<!-- 마지막 번호보여주기  -->
    <select id="lastQno" resultType="int">
        SELECT IFNULL(MAX(qno), 1) AS qno FROM question;
    </select>

<!-- 상품문의하기   -->
    <insert id="insert" parameterType="Question">
        INSERT INTO question
            (qno, <if test="ano!=null">ano,</if> user_id, product_id, contents)
        VALUES
            (#{qno},
             <if test="ano!=null">#{ano},</if>
             #{user_id}, #{product_id}, #{contents})
    </insert>

    <sql id="selectFromQuestion">
        SELECT * FROM question
    </sql>

<!--전체 문의글 정렬  -->
    <select id="selectAll" resultType="Question">
        <include refid="selectFromQuestion"/>
        ORDER BY qno desc
    </select>

<!--질문중에 답변이 달리지않은 질문만 가져오기-->
    <select id="selectMng" resultMap="questionResultMap" parameterType="map">
        SELECT
        q.qno,
        q.ano,
        q.user_id,
        q.product_id,
        q.contents,
        q.reg_date,

        p.product_name,
        p.image
        FROM question q
            JOIN (
                SELECT * FROM product
                GROUP BY product_id
            ) p
            ON q.product_id = p.product_id
        WHERE q.ano = 1
          AND NOT EXISTS (
                SELECT 1 FROM question q2
                WHERE q2.qno = q.qno
                  AND q2.ano = 2
            )
        ORDER BY qno asc
        LIMIT #{sc.offset}, #{sc.pageSize};
    </select>

    <select id="selectMngCnt" resultType="int">
        SELECT COUNT(*)
        FROM question q
        WHERE q.ano = 1
          AND NOT EXISTS (
                SELECT 1
                FROM question q2
                WHERE q2.qno = q.qno
                  AND q2.ano = 2
            );
    </select>

<!--  아이디 or 상품번호에 맞춰 정보불러오기   -->
    <select id="selectInfo" resultType="Question" parameterType="Map">
        SELECT
        q.qno,
        q.ano,
        q.user_id,
        q.product_id,
        q.contents,
        q.reg_date,

        p.product_name,
        p.image
        FROM question q
        JOIN (
        SELECT qno
        FROM question
        WHERE true
        AND ano = 1
        <if test="user_id != null">
            AND user_id = #{user_id}
        </if>
        <if test="product_id != null">
            AND product_id = #{product_id}
        </if>
        ORDER BY qno DESC
        LIMIT #{sc.offset}, #{sc.pageSize}
        ) sub ON q.qno = sub.qno
        JOIN (
        SELECT
        product_id,
        MAX(product_name) AS product_name,
        MAX(image) AS image
        FROM product
        GROUP BY product_id
        ) p ON q.product_id = p.product_id
        ORDER BY q.qno DESC, q.ano ASC;
    </select>


<!-- 해당 번호에 대한 정보 불러오기 -->
    <select id="select" resultType="Question" parameterType="int">
        <include refid="selectFromQuestion"/>
        WHERE qno = #{qno}
        ORDER BY ano asc
    </select>

<!-- 내용수정   -->
    <update id="update" parameterType="Question">
        update question
        set contents = #{contents}
        where qno = #{qno} and ano=1;
    </update>

<!-- 삭제 -->
    <delete id="delete" parameterType="map">
        DELETE FROM question
        where qno = #{qno} AND user_id = #{user_id}
    </delete>
</mapper>